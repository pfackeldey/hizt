[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hizt"
authors = [
    { name = "Benjamin Fischer", email = "benjamin.fischer@rwth-aachen.de" },
    { name = "Peter Fackeldey", email = "peter.fackeldey@cern.ch" },
]
description = "Packed (compressed) boost-histograms."
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
]
dynamic = ["version"] # version is set in src/hizt/__init__.py
dependencies = ["hist"]

[project.optional-dependencies]
hdf5 = ["h5py"]
zarr = ["zarr"]
blosc2 = ["blosc2"]
# dev envs
test = ["pytest >=6", "pytest-cov >=3"]
docs = [
    "sphinx",
    "myst-parser",
    "myst-nb",
    "sphinx_copybutton",
    "sphinx_autodoc_typehints",
    "sphinx-book-theme",
    "sphinx-design",
    "sphinx-togglebutton",
]
extra = ["ipython", "ruff", "pre_commit", "mypy"]

[project.urls]
Homepage = "https://github.com/pfackeldey/hizt"
"Bug Tracker" = "https://github.com/pfackeldey/hizt/issues"
Discussions = "https://github.com/pfackeldey/hizt/discussions"
Changelog = "https://github.com/pfackeldey/hizt/releases"


[tool.hatch]
version.path = "src/hizt/__init__.py"
envs.default.dependencies = ["pytest", "pytest-cov"]


[tool.pytest.ini_options]
filterwarnings = ["error"]
log_cli_level = "INFO"
testpaths = ["tests"]


[tool.coverage]
run.source = ["hizt"]
port.exclude_lines = ['pragma: no cover', '\.\.\.', 'if typing.TYPE_CHECKING:']


[tool.mypy]
files = ["src", "tests"]
python_version = "3.10"
show_error_codes = true
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
strict = false
ignore_missing_imports = true


[tool.ruff]
src = ["src"]
exclude = []

[tool.ruff.lint]
extend-ignore = [
    "PLR",  # Design related pylint codes
    "E501", # Line too long
    # "B006",   # converts default args to 'None'
    "I002",   # isort: "from __future__ import annotations"
    "ISC001", # flake8-implicit-str-concat: Implicit string concatenation"
]
select = [
    "E",
    "F",
    "W",   # flake8
    "B",   # flake8-bugbear
    "I",   # isort
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "G",   # flake8-logging-format
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "EXE", # flake8-executable
]
unfixable = [
    "F841", # Would remove unused variables
]
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]


[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64", "osx-64"]

[tool.pixi.dependencies]
hist = "*"
h5py = "*"
zarr = "*"
# blosc2 = "*" <- breaks with conda-forge, why?

[tool.pixi.pypi-dependencies]
hizt = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = [
    "hdf5",
    "zarr",
    "blosc2",
    "test",
    "docs",
    "extra",
], solve-group = "default" }
docs = { features = ["docs"], solve-group = "default" }
test = { features = ["test"], solve-group = "default" }

[tool.pixi.tasks]
test = "pytest"
lint = "ruff check . --fix --show-fixes"
checkall = "pre-commit run --all-files"
builddocs = "rm -rf build/ && sphinx-build -M html ./docs ./build -W --keep-going"
